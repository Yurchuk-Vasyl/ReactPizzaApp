{"version":3,"file":"static/js/317.5d5f26ec.chunk.js","mappings":"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","sources":["components/Categories.tsx","components/Sort.tsx","components/PizzaBlock/PizzaBlock.tsx","webpack://pizza-app/./src/components/Pagination/Pagination.module.scss?7fb8","components/Pagination/Pagination.tsx","components/PizzaBlock/Skeleton.tsx","store/slices/filter/selectors.ts","store/slices/pizza/selectors.ts","pages/Home.tsx"],"sourcesContent":["import { memo } from 'react';\r\n\r\nconst categories = [\r\n  'Все',\r\n  'Мясные',\r\n  'Вегетарианская',\r\n  'Гриль',\r\n  'Острые',\r\n  'Закрытые',\r\n];\r\n\r\ntype CategoriesProps = {\r\n  value: number;\r\n  onChangeCategory: (i: number) => void;\r\n};\r\n\r\nconst Categories: React.FC<CategoriesProps> = memo(\r\n  ({ value, onChangeCategory }) => {\r\n    return (\r\n      <div className=\"categories\">\r\n        <ul>\r\n          {categories.map((item, index) => {\r\n            return (\r\n              <li\r\n                key={index}\r\n                onClick={() => onChangeCategory(index)}\r\n                className={value === index ? 'active' : ''}\r\n              >\r\n                {item}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Categories;\r\n","import { useState, useEffect, useRef, memo } from 'react';\r\nimport { setSort } from '../store/slices/filter/filterSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Sort, SortPropertyEnum } from '../store/slices/filter/types';\r\n\r\ntype SortProps = {\r\n  value: { sortProperty: string; name: string };\r\n};\r\n\r\nexport const list: Sort[] = [\r\n  { sortProperty: SortPropertyEnum.RATING_DESC, name: 'популярности(desk)' },\r\n  { sortProperty: SortPropertyEnum.RATING_ASC, name: 'популярности(ask)' },\r\n  { sortProperty: SortPropertyEnum.PRICE_DESC, name: 'цене(desk)' },\r\n  { sortProperty: SortPropertyEnum.PRICE_ASC, name: 'цене(ask)' },\r\n  { sortProperty: SortPropertyEnum.TITLE_DESC, name: 'алфавиту(desk)' },\r\n  { sortProperty: SortPropertyEnum.TITLE_ASC, name: 'алфавиту(ask)' },\r\n];\r\n\r\nconst SortComp: React.FC<SortProps> = memo(({ value }) => {\r\n  const sortRef = useRef<HTMLDivElement>(null);\r\n  const [active, setActive] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const handleClickSort = (e: MouseEvent) => {\r\n      if (e.target && sortRef.current) {\r\n        const _target = e.target as EventTarget & {\r\n          closest: (selector: string) => Element | null;\r\n        };\r\n        if (!_target.closest(`.${sortRef.current.className}`)) {\r\n          setActive(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (active) {\r\n      document.body.addEventListener('click', handleClickSort);\r\n    }\r\n\r\n    return () => {\r\n      document.body.removeEventListener('click', handleClickSort);\r\n    };\r\n  }, [active]);\r\n\r\n  const onClickListItem = (obj: Sort) => {\r\n    dispatch(setSort(obj));\r\n    setActive(false);\r\n  };\r\n\r\n  return (\r\n    <div ref={sortRef} className=\"sort\">\r\n      <div className=\"sort__label\">\r\n        <svg\r\n          className={active ? '' : 'svg__disabled'}\r\n          width=\"10\"\r\n          height=\"6\"\r\n          viewBox=\"0 0 10 6\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n            fill=\"#2C2C2C\"\r\n          />\r\n        </svg>\r\n        <div>Сортировка по:</div>\r\n        <span onClick={() => (active ? setActive(false) : setActive(true))}>\r\n          {value.name}\r\n        </span>\r\n      </div>\r\n      {active && (\r\n        <div className=\"sort__popup\">\r\n          <ul>\r\n            {list.map((obj, index) => {\r\n              return (\r\n                <li\r\n                  onClick={() => onClickListItem(obj)}\r\n                  className={\r\n                    value.sortProperty === obj.sortProperty ? 'active' : ''\r\n                  }\r\n                  key={index}\r\n                >\r\n                  {obj.name}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SortComp;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { addItem } from '../../store/slices/cart/cartSlice';\r\nimport { CartItem } from '../../store/slices/cart/types';\r\nimport { selectCartItemById } from '../../store/slices/cart/selectors';\r\n\r\ntype PizzaBlockProps = {\r\n  id: string;\r\n  title: string;\r\n  price: number;\r\n  img: string;\r\n  sizes: [];\r\n};\r\n\r\nconst PizzaBlock: React.FC<PizzaBlockProps> = ({\r\n  id,\r\n  title,\r\n  price,\r\n  img,\r\n  sizes,\r\n}) => {\r\n  const navigation = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const cartItem = useSelector(selectCartItemById(id));\r\n  const count = cartItem?.count || 0;\r\n\r\n  const types = ['тонкое', 'традиционное'];\r\n\r\n  const [typeofPizza, setTypeofPizza] = useState<number>(0);\r\n  const [sizeofPizza, setSizeofPizza] = useState<number>(0);\r\n  const onClickAdd = () => {\r\n    const item: CartItem = {\r\n      title,\r\n      id,\r\n      price,\r\n      img,\r\n      type: types[typeofPizza],\r\n      size: sizes[sizeofPizza],\r\n      count: 0,\r\n    };\r\n    dispatch(addItem(item));\r\n  };\r\n\r\n  const onClickImage = () => {\r\n    navigation('pizza/' + id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pizza-block-wrapper\">\r\n      {' '}\r\n      <div className=\"pizza-block\">\r\n        <img\r\n          onClick={onClickImage}\r\n          className=\"pizza-block__image\"\r\n          src={img}\r\n          alt=\"Pizza\"\r\n        />\r\n        <h4 className=\"pizza-block__title\">{title}</h4>\r\n        <div className=\"pizza-block__selector\">\r\n          <ul>\r\n            {types.map((item, index) => {\r\n              return (\r\n                <li\r\n                  key={index}\r\n                  onClick={() => setTypeofPizza(index)}\r\n                  className={typeofPizza === index ? 'active' : ''}\r\n                >\r\n                  {item}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <ul>\r\n            {sizes.map((item, index) => {\r\n              return (\r\n                <li\r\n                  key={index}\r\n                  className={sizeofPizza === index ? 'active' : ''}\r\n                  onClick={() => setSizeofPizza(index)}\r\n                >\r\n                  {item}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <div className=\"pizza-block__bottom\">\r\n          <div className=\"pizza-block__price\">от {price}₴</div>\r\n          <div\r\n            className=\"button button--outline button--add\"\r\n            onClick={onClickAdd}\r\n          >\r\n            <svg\r\n              width=\"12\"\r\n              height=\"12\"\r\n              viewBox=\"0 0 12 12\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                fill=\"white\"\r\n              />\r\n            </svg>\r\n            <span>Добавить</span>\r\n            <i>{count}</i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PizzaBlock;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__0Sl6w\"};","import React from 'react';\r\n\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport styles from './Pagination.module.scss';\r\n\r\ntype PaginationProps = {\r\n  currentPage: number;\r\n  onChangePage: (number: number) => void;\r\n};\r\n\r\nconst Pagination: React.FC<PaginationProps> = ({\r\n  currentPage,\r\n  onChangePage,\r\n}) => {\r\n  return (\r\n    <ReactPaginate\r\n      className={styles.pagination}\r\n      breakLabel=\"...\"\r\n      nextLabel=\">\"\r\n      onPageChange={(event) => onChangePage(event.selected + 1)}\r\n      pageRangeDisplayed={8}\r\n      pageCount={3}\r\n      forcePage={currentPage - 1}\r\n      previousLabel=\"<\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\ntype SkeletonProps = {};\r\n\r\nconst Skeleton: React.FC<SkeletonProps> = (props) => (\r\n  <div className=\"pizza-block-wrapper\">\r\n    <ContentLoader\r\n      className=\"pizza-block\"\r\n      speed={2}\r\n      width={280}\r\n      height={466}\r\n      viewBox=\"0 0 280 485\"\r\n      backgroundColor=\"#f3f3f3\"\r\n      foregroundColor=\"#ecebeb\"\r\n      {...props}\r\n    >\r\n      <rect x=\"0\" y=\"265\" rx=\"15\" ry=\"15\" width=\"280\" height=\"30\" />\r\n      <circle cx=\"140\" cy=\"128\" r=\"125\" />\r\n      <rect x=\"0\" y=\"310\" rx=\"10\" ry=\"10\" width=\"280\" height=\"90\" />\r\n      <rect x=\"0\" y=\"427\" rx=\"10\" ry=\"10\" width=\"95\" height=\"35\" />\r\n      <rect x=\"126\" y=\"421\" rx=\"25\" ry=\"29\" width=\"145\" height=\"45\" />\r\n    </ContentLoader>\r\n  </div>\r\n);\r\n\r\nexport default Skeleton;\r\n","import { RootState } from '../../store';\r\n\r\nexport const selectFilter = (state: RootState) => state.filter;\r\n","import { RootState } from '../../store';\r\n\r\nexport const selectPizzasData = (state: RootState) => state.pizzas;\r\n","import qs from 'qs';\r\nimport { useSelector } from 'react-redux';\r\nimport React, { useCallback, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Categories from '../components/Categories';\r\nimport SortComp, { list } from '../components/Sort';\r\nimport PizzaBlock from '../components/PizzaBlock/PizzaBlock';\r\nimport Pagination from '../components/Pagination/Pagination';\r\nimport Skeleton from '../components/PizzaBlock/Skeleton';\r\n\r\nimport { useAppDispatch } from '../store/store';\r\n\r\nimport {\r\n  setCategoryId,\r\n  setCurrentPage,\r\n  setFilters,\r\n} from '../store/slices/filter/filterSlice';\r\n\r\nimport { fetchPizzas } from '../store/slices/pizza/pizzasSlice';\r\nimport { Sort } from '../store/slices/filter/types';\r\nimport { selectFilter } from '../store/slices/filter/selectors';\r\nimport { selectPizzasData } from '../store/slices/pizza/selectors';\r\nimport { Status } from '../store/slices/pizza/types';\r\nimport CartItem from './../components/CartItem/CartItem';\r\n\r\nconst Home: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const isSearch = useRef(false);\r\n  const isMounted = useRef(false);\r\n\r\n  const { categoryId, sortType, currentPage, searchValue } =\r\n    useSelector(selectFilter);\r\n\r\n  const { status, itemsPizza } = useSelector(selectPizzasData);\r\n\r\n  const onChangeCategory = useCallback((id: number) => {\r\n    dispatch(setCategoryId(id));\r\n  }, []);\r\n\r\n  const onChangePage = (number: number) => {\r\n    dispatch(setCurrentPage(number));\r\n  };\r\n\r\n  const getPizzas = async () => {\r\n    const order = sortType.sortProperty.includes('-') ? 'asc' : 'desc';\r\n    const sortBy = sortType.sortProperty.replace('-', '');\r\n    const category = categoryId === 0 ? '' : 'category=' + categoryId;\r\n    dispatch(\r\n      fetchPizzas({ order, sortBy, category, searchValue, currentPage })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (window.location.search) {\r\n      const params = qs.parse(\r\n        window.location.search.substring(1)\r\n      ) as unknown as {\r\n        categoryId: string;\r\n        sortProperty?: string;\r\n        sort: Sort;\r\n        currentPage: string;\r\n      };\r\n      const sort = list.find((obj) => obj.sortProperty === params.sortProperty);\r\n      if (sort) {\r\n        params.sort = sort;\r\n        delete params.sortProperty;\r\n      }\r\n      dispatch(setFilters(params));\r\n      isSearch.current = true;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isSearch.current) {\r\n      getPizzas();\r\n    }\r\n    isSearch.current = false;\r\n    window.scrollTo(0, 0);\r\n  }, [categoryId, sortType, searchValue, currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (isMounted.current) {\r\n      const queryString = qs.stringify({\r\n        sortProperty: sortType.sortProperty,\r\n        categoryId,\r\n        currentPage,\r\n      });\r\n      navigate(`?${queryString}`);\r\n    }\r\n    isMounted.current = true;\r\n  }, [currentPage, categoryId, sortType.sortProperty]);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"content__top\">\r\n        <Categories value={categoryId} onChangeCategory={onChangeCategory} />\r\n        <SortComp value={sortType} />\r\n      </div>\r\n      <h2 className=\"content__title\">Все пиццы</h2>\r\n      {status === Status.ERROR ? (\r\n        <div className=\"content__error-info\">\r\n          <h2>Error 404 😕 </h2>\r\n          <p>Unfortunately we could not fetch data.Please try again later...</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"content__items\">\r\n          {status === Status.LOADING\r\n            ? [...new Array(4)].map((_, index) => <Skeleton key={index} />)\r\n            : itemsPizza.map((obj: any) => {\r\n                return (\r\n                  <PizzaBlock\r\n                    key={obj.id}\r\n                    {...obj}\r\n                    img={obj.imageUrl}\r\n                    title={obj.name}\r\n                  />\r\n                );\r\n              })}\r\n        </div>\r\n      )}\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        onChangePage={(number: number) => onChangePage(number)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["categories","memo","_ref","value","onChangeCategory","_jsx","className","children","map","item","index","onClick","list","sortProperty","SortPropertyEnum","name","sortRef","useRef","_useState","useState","_useState2","_slicedToArray","active","setActive","dispatch","useDispatch","useEffect","handleClickSort","e","target","current","closest","concat","document","body","addEventListener","removeEventListener","_jsxs","ref","width","height","viewBox","fill","xmlns","d","obj","setSort","onClickListItem","id","title","price","img","sizes","navigation","useNavigate","cartItem","useSelector","selectCartItemById","count","types","typeofPizza","setTypeofPizza","_useState3","_useState4","sizeofPizza","setSizeofPizza","src","alt","type","size","addItem","currentPage","onChangePage","ReactPaginate","styles","breakLabel","nextLabel","onPageChange","event","selected","pageRangeDisplayed","pageCount","forcePage","previousLabel","props","ContentLoader","_objectSpread","speed","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","selectFilter","state","filter","selectPizzasData","pizzas","navigate","useAppDispatch","isSearch","isMounted","_useSelector","categoryId","sortType","searchValue","_useSelector2","status","itemsPizza","useCallback","setCategoryId","getPizzas","_asyncToGenerator","_regeneratorRuntime","mark","_callee","order","sortBy","category","wrap","_context","prev","next","includes","replace","fetchPizzas","stop","apply","arguments","window","location","search","params","qs","substring","sort","find","setFilters","scrollTo","queryString","Categories","SortComp","Status","_toConsumableArray","Array","_","Skeleton","PizzaBlock","imageUrl","Pagination","number","setCurrentPage"],"sourceRoot":""}